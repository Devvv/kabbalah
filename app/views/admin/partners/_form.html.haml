= javascript_include_tag "svg_map/raphael"
= form_for [:admin, @item], :html => {:class => "form-horizontal"} do |f|

  .control-group
    %label.control-label Заголовок
    .controls
      = f.text_field :name, :class => "item-name"

  .control-group
    %label.control-label Категория
    .controls
      = f.collection_select :category_id, Category.all, :id, :name, {:selected => @item.category_id, :prompt => "Выберите категорию"}

  .control-group
    %label.control-label Активность
    .controls
      = f.check_box :active

  - if @item.photo.present?

    .control-group
      %label.control-label Изменить фото
      .controls
        = f.file_field :photo

    .control-group
      %label.control-label Текущее фото
      .controls
        = link_to @item.photo.url do
          = image_tag @item.photo.url, :width => 200

    .control-group
      %label.control-label Удалить фото
      .controls
        = f.check_box :delete_photo

  - else

    .control-group
      %label.control-label Загрузить фото
      .controls
        = f.file_field :photo

  .control-group
    %label.control-label Помещение
    .controls
      = f.collection_select :property_ids, Property.rayon.all, :id, :name, {:selected => @item.property_ids}, {:multiple => true, :id => "property_id", :style => "display:none;"}
      .tabbable
        %ul.nav.nav-tabs
          %li
            %a{"data-toggle" => "tab", :href => "#tab0"} 0 Этаж
          %li.active
            %a{"data-toggle" => "tab", :href => "#tab1"} 1 Этаж
          %li
            %a{"data-toggle" => "tab", :href => "#tab2"} 2 Этаж
        .tab-content
          #tab0.tab-pane
            #map0
          #tab1.tab-pane.active
            #map1
          #tab2.tab-pane
            #map2

  .control-group
    %label.control-label Текст
    .controls
      = f.text_area :text, :class => "editor"

  .form-actions
    -if @item.new_record?
      %input.btn.btn-success{:name => "save", :type => "submit", :value => "Создать"}
    -else
      %input.btn.btn-success{:name => "save", :type => "submit", :value => "Изменить"}
    %input.btn.btn-primary{:name => "apply",:type => "submit", :value => "Применить"}
    = link_to "Отмена", send("admin_" + @name + "s_path"), :class => "btn"

%script
  var all = {};

- Property.rayon.each do |p|
  %script
    if (!floor_#{p.floor}) var floor_#{p.floor} = {};
    floor_#{p.floor}["#{p.id}"] = {path: "#{p.path}", value: #{p.id}};


:javascript
  $(function(){
      if( $('#map0').get(0) || $('#map1').get(0) || $('#map2').get(0) ){
          var f_f, s_f, fr_f, rr, obj_fu, obj;
          rr = function(){
              f_f = Raphael('map0', 840, 250),
              s_f = Raphael('map1', 840, 250),
              fr_f = Raphael('map2', 840, 250),
              attributes = {
                  fill: '#ffffff',
                  stroke: '#3899E6',
                  'stroke-width': 1,
                  'stroke-linejoin': 'round'
              };
              obj_fu = function(ob, floor){

                  ob
                      .hover(
                          /*function(){
                              this.animate({
                                  fill: '#1669AD'
                              }, 300);
                              var mt = $('.tab-content').offset();
                              var tt = this.getBBox();
                              if(mt.left + $('.tab-content').width() > mt.left + tt.x + tt.width + 20 + 340){
                                  $('.map_tootip').css({
                                      top: mt.top + tt.y,
                                      left: mt.left + tt.x + tt.width + 20
                                  })
                              }else{
                                  $('.map_tootip').css({
                                      top: mt.top + tt.y,
                                      left: mt.left + tt.x  - 340
                                  })
                              }

                              $('.map_tootip').find('img').attr('src', floor.img);
                              $('.map_tootip').find('h3').html( floor.name);
                              $('.map_tootip').find('p').html( floor.detail );
                              $('.map_tootip').show();
                          },
                          function(){
                              $('.map_tootip').hide();
                              this.animate({
                                  fill: attributes.fill
                              }, 300);
                          }*/
                      )
                      .click(
                          function(event){
                              if (this.attr('title') == 'selected') {
                                  this.attr('title', '');
                                  this.animate({
                                      fill: attributes.fill
                                  }, 300);
                                  $('#property_id').val(0);
                              } else {
                                  if (!event.shiftKey) {
                                    f_f.forEach(function(el){
                                        el.attr('title', '');
                                        el.animate({
                                            fill: attributes.fill
                                        }, 300);
                                    });
                                    s_f.forEach(function(el){
                                        el.attr('title', '');
                                        el.animate({
                                            fill: attributes.fill
                                        }, 300);
                                    });
                                    fr_f.forEach(function(el){
                                        el.attr('title', '');
                                        el.animate({
                                            fill: attributes.fill
                                        }, 300);
                                    });
                                    $('#property_id').find('option').removeAttr('selected');
                                  }
                                  this.attr('title', 'selected');
                                  this.animate({
                                      fill: '#1669AD'
                                  }, 300);
                                  $('#property_id').find('option[value="'+this.attr("target")+'"]').attr('selected', 'selected');
                              }
                          }
                      )
              }
              for (var area in floor_0) {
                  obj = f_f.path(floor_0[area].path);
                  obj.attr(attributes);
                  obj.attr('target', floor_0[area].value);
                  if( obj.id != 0 ) obj_fu(obj, floor_0[area]);
              }
              for (var area in floor_1) {
                  obj = s_f.path(floor_1[area].path);
                  obj.attr(attributes);
                  obj.attr('target', floor_1[area].value);
                  if( obj.id != 2  ) obj_fu(obj, floor_1[area]);
              }
              for (var area in floor_2) {
                  obj = fr_f.path(floor_2[area].path);
                  obj.attr(attributes);
                  obj.attr('target', floor_2[area].value);
                  if( obj.id != 21 ) if( obj.id != 22 ) obj_fu(obj, floor_2[area]);
              }
              $('body').append(
                  '<div class="map_tootip hide">' +
                      '<img alt="" src="">'+
                      '<div class="caption">'+
                          '<h3></h3>'+
                          '<p></p>'+
                      '</div>'+
                  '</div>'
              );
          }
          rr();
      }
      //console.log($('#property_id').find(':selected'));
      if ($('#property_id').find(':selected').size() > 0) {
        $('#property_id').find(':selected').each(function(){
          var prop_id = $(this).val();
          var it = false;
          f_f.forEach(function(el){
            if (parseInt(el.attr("target")) == parseInt(prop_id)) it = el
          });
          if (!it) s_f.forEach(function(el){
            if (parseInt(el.attr("target")) == parseInt(prop_id)) it = el
          });
          if (!it) fr_f.forEach(function(e){
            if (parseInt(el.attr("target")) == parseInt(prop_id)) it = el
          });
          if (it) {
            it.attr('title', 'selected');
            it.animate({
                fill: '#1669AD'
            }, 300);
          }
        });
      }
  });
